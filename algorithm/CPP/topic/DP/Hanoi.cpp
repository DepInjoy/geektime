/**
 * @brief  参考《程序员代码面试指南：IT名企算法与数据结构题目最优解(第2版)》
 * 
 *         1. 汉诺塔问题：
 *              给定一个整数n, 代表汉诺塔游戏中从小到大放置的n个圆盘
 *              假设开始时所有的圆盘都放在左边的柱子上
 *              按照汉诺塔游戏的要求把所有的圆盘都移到右边的柱子上
 *              实现函数打印最优移动轨迹
 *          
 *          1.2 汉诺塔问题进阶：
 *              给定一个整型数组arr，其中只含有1、2和3，代表所有圆盘目前的状态
 *              1代表左柱，2代表中柱，3代表右柱, arr[i]的值代表第i+1个圆盘的位置
 *              比如，arr=[3,3,2,1]，代表第1个圆盘在右柱上、第2个圆盘在右柱上
 *              第3个圆盘在中柱上、第4个圆盘在左柱上
 *              如果arr代表的状态是最优移动轨迹过程中出现的状态，返回arr这种状态是最优移动轨迹中的第几个状态
 *              如果arr代表的状态不是最优移动轨迹过程中出现的状态，则返回-1。
 */

/**
 * @brief       1. 汉诺塔问题
 */
void hanoi(int n) {

}

/**
 * @brief       1.2 汉诺塔进阶问题递归实现
 *              算法时间复杂度为O(N), 额外空间复杂度为O(N)
 */
int step1(int* arr) {
    return 0;
}

/**
 * @brief       汉诺塔进阶问题非递归实现
 *              算法时间复杂度为O(N), 额外空间复杂度为O(1)
 */
int step1(int* arr) {
    return 0;
}

int main(int argc, char* argv) {

}
